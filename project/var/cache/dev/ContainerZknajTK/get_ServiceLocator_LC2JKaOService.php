<?php

namespace ContainerZknajTK;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_LC2JKaOService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.LC2JKaO' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.LC2JKaO'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\Admin\\User\\EditController::editUser' => ['privates', '.service_locator.4T4EJFR', 'get_ServiceLocator_4T4EJFRService', true],
            'App\\Controller\\Task\\EditController::editAction' => ['privates', '.service_locator.ATFD0HV', 'get_ServiceLocator_ATFD0HVService', true],
            'App\\Controller\\Task\\ToggleController::toggleTaskAction' => ['privates', '.service_locator.ATFD0HV', 'get_ServiceLocator_ATFD0HVService', true],
            'App\\Controller\\User\\LoginController::login' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::terminate' => ['privates', '.service_locator.bRdave9', 'get_ServiceLocator_BRdave9Service', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::terminate' => ['privates', '.service_locator.bRdave9', 'get_ServiceLocator_BRdave9Service', true],
            'App\\Controller\\Admin\\User\\EditController:editUser' => ['privates', '.service_locator.4T4EJFR', 'get_ServiceLocator_4T4EJFRService', true],
            'App\\Controller\\Task\\EditController:editAction' => ['privates', '.service_locator.ATFD0HV', 'get_ServiceLocator_ATFD0HVService', true],
            'App\\Controller\\Task\\ToggleController:toggleTaskAction' => ['privates', '.service_locator.ATFD0HV', 'get_ServiceLocator_ATFD0HVService', true],
            'App\\Controller\\User\\LoginController:login' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:terminate' => ['privates', '.service_locator.bRdave9', 'get_ServiceLocator_BRdave9Service', true],
        ], [
            'App\\Controller\\Admin\\User\\EditController::editUser' => '?',
            'App\\Controller\\Task\\EditController::editAction' => '?',
            'App\\Controller\\Task\\ToggleController::toggleTaskAction' => '?',
            'App\\Controller\\User\\LoginController::login' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'App\\Kernel::terminate' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'kernel::terminate' => '?',
            'App\\Controller\\Admin\\User\\EditController:editUser' => '?',
            'App\\Controller\\Task\\EditController:editAction' => '?',
            'App\\Controller\\Task\\ToggleController:toggleTaskAction' => '?',
            'App\\Controller\\User\\LoginController:login' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
            'kernel:terminate' => '?',
        ]);
    }
}
